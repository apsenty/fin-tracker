openapi: 3.0.3
info:
  title: RESTful API
  version: 1.0.0
  contact: {}
servers:
  - url: http://127.0.0.1:8080
paths:
  /fintracker/{id}:
    get:
      summary: Получить информацию о записи по ее id
      description: >-
        This is a GET request and it is used to "get" data from an endpoint.
        There is no request body for a GET request, but you can use query
        parameters to help specify the resource you want data on (e.g., in this
        request, we have `id=1`).


        A successful GET response will have a `200 OK` status, and should
        include some kind of response body - for example, HTML web content or
        JSON data.
      operationId: id
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  amount:
                    type: number
                    example: 100
                  comment:
                    type: string
                    example: Тест
                  id:
                    type: number
                    example: 1
                  type:
                    type: string
                    example: Расход
              examples:
                200 OK:
                  value:
                    amount: 100
                    comment: Тест
                    id: 1
                    type: Расход
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  description:
                    type: string
                    example: Запись не найдена.
                  errorCode:
                    type: string
                    example: spendingNotFound
              examples:
                404 Not Found:
                  value:
                    description: Запись не найдена.
                    errorCode: spendingNotFound
    put:
      summary: Обновить запись
      description: >-
        This is a PUT request and it is used to overwrite an existing piece of
        data. For instance, after you create an entity with a POST request, you
        may want to modify that later. You can do that using a PUT request. You
        typically identify the entity being updated by including an identifier
        in the URL (eg. `id=1`).


        A successful PUT request typically returns a `200 OK`, `201 Created`, or
        `204 No Content` response code.
      operationId: '2'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 150
                comment:
                  type: string
                  example: Кофе
                type:
                  type: string
                  example: Расход
            examples:
              Обновить запись:
                value:
                  amount: 150
                  comment: Кофе
                  type: Расход
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: success
                  id:
                    type: number
                    example: 1
                  message:
                    type: string
                    example: Запись успешно обновлена.
              examples:
                200 OK:
                  value:
                    code: success
                    id: 1
                    message: Запись успешно обновлена.
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  description:
                    type: string
                    example: Запись не найдена.
                  errorCode:
                    type: string
                    example: spendingNotFound
              examples:
                404 Not Found:
                  value:
                    description: Запись не найдена.
                    errorCode: spendingNotFound
    delete:
      summary: Удалить запись
      description: >-
        This is a DELETE request, and it is used to delete data that was
        previously created via a POST request. You typically identify the entity
        being updated by including an identifier in the URL (eg. `id=1`).


        A successful DELETE request typically returns a `200 OK`, `202
        Accepted`, or `204 No Content` response code.
      operationId: '3'
      requestBody:
        content:
          application/json:
            examples:
              Удалить запись:
                value: ''
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: success
                  id:
                    type: number
                    example: 1
                  message:
                    type: string
                    example: Запись успешно удалена.
              examples:
                200 OK:
                  value:
                    code: success
                    id: 1
                    message: Запись успешно удалена.
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  description:
                    type: string
                    example: Запись не найдена.
                  errorCode:
                    type: string
                    example: spendingNotFound
              examples:
                404 Not Found:
                  value:
                    description: Запись не найдена.
                    errorCode: spendingNotFound
    patch:
      summary: Обновить запись частично
      description: Обновить запись частично
      operationId: '4'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  example: Тест
            examples:
              Обновить запись частично:
                value:
                  comment: Тест
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: success
                  id:
                    type: number
                    example: 1
                  message:
                    type: string
                    example: Запись успешно создана.
              examples:
                200 OK:
                  value:
                    code: success
                    id: 1
                    message: Запись успешно создана.
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  description:
                    type: string
                    example: Запись не найдена.
                  errorCode:
                    type: string
                    example: spendingNotFound
              examples:
                404 Not Found:
                  value:
                    description: Запись не найдена.
                    errorCode: spendingNotFound
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: '1'
  /fintracker:
    get:
      summary: Получить список записей
      description: >-
        This is a GET request and it is used to "get" data from an endpoint.
        There is no request body for a GET request, but you can use query
        parameters to help specify the resource you want data on (e.g., in this
        request, we have `id=1`).


        A successful GET response will have a `200 OK` status, and should
        include some kind of response body - for example, HTML web content or
        JSON data.
      operationId: ''
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    amount:
                      type: number
                      example: 100
                    comment:
                      type: string
                      example: Тест
                    id:
                      type: number
                      example: 1
                    type:
                      type: string
                      example: Расход
                example:
                  - amount: 100
                    comment: Тест
                    id: 1
                    type: Расход
                  - amount: 200
                    comment: Тест
                    id: 2
                    type: Расход
              examples:
                200 OK:
                  value:
                    - amount: 100
                      comment: Тест
                      id: 1
                      type: Расход
                    - amount: 200
                      comment: Тест
                      id: 2
                      type: Расход
    post:
      summary: Создать запись
      description: >-
        This is a POST request, submitting data to an API via the request body.
        This request submits JSON data, and the data is reflected in the
        response.


        A successful POST request typically returns a `200 OK` or `201 Created`
        response code.
      operationId: '1'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 150
                comment:
                  type: string
                  example: Тест
                type:
                  type: string
                  example: Расход
            examples:
              Создать запись:
                value:
                  amount: 150
                  comment: Тест
                  type: Расход
      responses:
        '201':
          description: 201 Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: success
                  id:
                    type: number
                    example: 1
                  message:
                    type: string
                    example: Запись успешно создана.
              examples:
                201 Created:
                  value:
                    code: success
                    id: 1
                    message: Запись успешно создана.
tags: []
